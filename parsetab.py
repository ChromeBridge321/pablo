
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSUMARESTAleftMULTIPLICACIONDIVISIONleftPARENTESIS_IPARENTESIS_DASIGNACION DIVISION IMPRIMIR MIENTRAS MULTIPLICACION NUMERO PARA PARENTESIS_D PARENTESIS_I RESTA SI SINO SUMA VAR VARIABLEexpression : expression SUMA termexpression : expression RESTA expression\n| RESTA expressionexpression : termterm : term MULTIPLICACION factorterm : term DIVISION factorterm : factorfactor : NUMEROfactor : PARENTESIS_I expression PARENTESIS_D'
    
_lr_action_items = {'RESTA':([0,1,2,3,4,5,6,8,11,12,13,14,15,16,17,],[3,8,-4,3,-7,-8,3,3,-3,8,-1,-2,-5,-6,-9,]),'NUMERO':([0,3,6,7,8,9,10,],[5,5,5,5,5,5,5,]),'PARENTESIS_I':([0,3,6,7,8,9,10,],[6,6,6,6,6,6,6,]),'$end':([1,2,4,5,11,13,14,15,16,17,],[0,-4,-7,-8,-3,-1,-2,-5,-6,-9,]),'SUMA':([1,2,4,5,11,12,13,14,15,16,17,],[7,-4,-7,-8,-3,7,-1,-2,-5,-6,-9,]),'PARENTESIS_D':([2,4,5,11,12,13,14,15,16,17,],[-4,-7,-8,-3,17,-1,-2,-5,-6,-9,]),'MULTIPLICACION':([2,4,5,13,15,16,17,],[9,-7,-8,9,-5,-6,-9,]),'DIVISION':([2,4,5,13,15,16,17,],[10,-7,-8,10,-5,-6,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,3,6,8,],[1,11,12,14,]),'term':([0,3,6,7,8,],[2,2,2,13,2,]),'factor':([0,3,6,7,8,9,10,],[4,4,4,4,4,15,16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression SUMA term','expression',3,'p_expression_plus','parser.py',12),
  ('expression -> expression RESTA expression','expression',3,'p_expressions','parser.py',16),
  ('expression -> RESTA expression','expression',2,'p_expressions','parser.py',17),
  ('expression -> term','expression',1,'p_expression_term','parser.py',24),
  ('term -> term MULTIPLICACION factor','term',3,'p_term_times','parser.py',28),
  ('term -> term DIVISION factor','term',3,'p_term_div','parser.py',33),
  ('term -> factor','term',1,'p_term_factor','parser.py',37),
  ('factor -> NUMERO','factor',1,'p_factor_num','parser.py',41),
  ('factor -> PARENTESIS_I expression PARENTESIS_D','factor',3,'p_factor_expr','parser.py',45),
]
